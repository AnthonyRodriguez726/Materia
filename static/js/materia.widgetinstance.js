// Generated by CoffeeScript 1.6.3
(function() {
  Namespace('Materia').WidgetInstance = (function() {
    var clearAll, get, getAll, updateWidget, _getFromServer, _gotAll, _widgetIds, _widgets,
      _this = this;
    _widgets = null;
    _widgetIds = {};
    _gotAll = false;
    _getFromServer = function(getWhat, callback) {
      if (getWhat != null) {
        getWhat = [[getWhat]];
      }
      return Materia.Coms.Json.send('widget_instances_get', getWhat, function(widgets) {
        var i, w, _i, _ref;
        _widgets = [];
        if ((widgets != null) && (widgets.length != null)) {
          for (i = _i = 0, _ref = widgets.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
            w = widgets[i];
            _widgetIds[w.id] = w;
            _widgets.push(w);
            w.searchCache = ("" + w.id + " " + w.widget.name + " " + w.name).toLowerCase();
          }
        }
        return callback(_widgets);
      });
    };
    clearAll = function() {
      _widgets = null;
      _widgetIds = {};
      return _gotAll = false;
    };
    getAll = function(callback) {
      if ((_widgets != null) && _gotAll) {
        return callback(_widgets);
      } else {
        _gotAll = true;
        return _getFromServer(null, callback);
      }
    };
    get = function(id, callback) {
      if (_widgetIds[id] != null) {
        return callback(_widgetIds[id]);
      } else {
        return _getFromServer(id, callback);
      }
    };
    updateWidget = function(widget) {
      var i, _i, _ref;
      for (i = _i = 0, _ref = _widgets.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
        if (_widgets[i] === widget.id) {
          _widgets[i] = widget;
          break;
        }
      }
      _widgetIds[widget.id] = widget;
      return null;
    };
    return {
      clearAll: clearAll,
      updateWidget: updateWidget,
      getAll: getAll,
      get: get
    };
  })();

}).call(this);
