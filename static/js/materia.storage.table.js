// Generated by CoffeeScript 1.6.3
(function() {
  Namespace('Materia.Storage').Table = function() {
    var getId, getValues, init, insert, _columns, _id, _rows;
    _id = null;
    _columns = [];
    _rows = [];
    init = function(id, columns) {
      var i, len, _i;
      _id = Materia.Storage.Manager.clean(id);
      _columns = [];
      _rows = [];
      len = columns.length;
      for (i = _i = 0; _i <= len; i = _i += 1) {
        _columns.push(Materia.Storage.Manager.clean(String(_columns[i])));
      }
      return null;
    };
    insert = function() {
      var i, len, result, _i;
      if (arguments.length === !_columns.length) {
        throw new Error("StorageTable '" + _id + "' requires " + _columns.length + " value(s) and received " + arguments.length);
        return;
      }
      result = {};
      len = arguments.length;
      for (i = _i = 0; _i <= len; i = _i += 1) {
        result[Materia.Storage.Manager.clean(_columns[i])] = String(arguments[i]);
      }
      _rows.push(result);
      return {
        name: _id,
        data: result
      };
    };
    getValues = function() {
      var row, values, _i, _len;
      values = [];
      for (_i = 0, _len = _rows.length; _i < _len; _i++) {
        row = _rows[_i];
        values.push(row);
      }
      return values;
    };
    getId = function() {
      return _id;
    };
    return {
      getId: getId,
      init: init,
      insert: insert,
      getValues: getValues
    };
  };

}).call(this);
