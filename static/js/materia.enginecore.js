// Generated by CoffeeScript 1.6.3
(function() {
  Namespace('Materia').Engine = (function() {
    var addLog, alert, disableResizeInterval, end, escapeScriptTags, getImageAssetUrl, sendPendingLogs, sendStorage, setHeight, start, _initWidget, _instance, _lastHeight, _onPostMessage, _resizeInterval, _sendPostMessage, _widgetClass;
    _widgetClass = null;
    _instance = null;
    _resizeInterval = null;
    _lastHeight = -1;
    _onPostMessage = function(e) {
      var msg;
      msg = JSON.parse(e.data);
      switch (msg.type) {
        case 'initWidget':
          return _initWidget(msg.data[0], msg.data[1]);
        default:
          throw new Error("Error: Engine Core received unknown post message: " + msg.type);
      }
    };
    _sendPostMessage = function(type, data) {
      return parent.postMessage(JSON.stringify({
        type: type,
        data: data
      }), '*');
    };
    _initWidget = function(qset, instance) {
      _widgetClass.start(instance, qset.data, qset.version);
      return _instance = instance;
    };
    start = function(widgetClass) {
      switch (false) {
        case typeof addEventListener === "undefined" || addEventListener === null:
          addEventListener('message', _onPostMessage, false);
          break;
        case typeof attachEvent === "undefined" || attachEvent === null:
          attachEvent('onmessage', _onPostMessage);
      }
      if ((widgetClass.manualResize != null) && widgetClass.manualResize === false) {
        _resizeInterval = setInterval(function() {
          return setHeight();
        }, 300);
      }
      _widgetClass = widgetClass;
      _sendPostMessage('initialize', null);
      return _sendPostMessage('start', null);
    };
    sendStorage = function() {
      return _sendPostMessage('sendStorage', arguments[0]);
    };
    addLog = function(type, item_id, text, value) {
      if (type == null) {
        type = '';
      }
      if (item_id == null) {
        item_id = 0;
      }
      if (text == null) {
        text = '';
      }
      return _sendPostMessage('addLog', {
        type: type,
        item_id: item_id,
        text: text,
        value: value
      });
    };
    alert = function(title, msg, type) {
      if (type == null) {
        type = 1;
      }
      return _sendPostMessage('alert', {
        title: title,
        msg: msg,
        type: type
      });
    };
    getImageAssetUrl = function(id) {
      return "" + BASE_URL + "/media/" + id;
    };
    end = function(showScoreScreenAfter) {
      if (showScoreScreenAfter == null) {
        showScoreScreenAfter = true;
      }
      return _sendPostMessage('end', showScoreScreenAfter);
    };
    sendPendingLogs = function() {
      return _sendPostMessage('sendPendingLogs', {});
    };
    setHeight = function(h) {
      if (!h) {
        h = $('html').height();
      }
      if (h !== _lastHeight) {
        _sendPostMessage('setHeight', [h]);
        return _lastHeight = h;
      }
    };
    disableResizeInterval = function() {
      return clearInterval(_resizeInterval);
    };
    escapeScriptTags = function(text) {
      return text.replace(/</g, '&lt;').replace(/>/g, '&gt;');
    };
    return {
      start: start,
      addLog: addLog,
      alert: alert,
      getImageAssetUrl: getImageAssetUrl,
      end: end,
      sendPendingLogs: sendPendingLogs,
      sendStorage: sendStorage,
      disableResizeInterval: disableResizeInterval,
      setHeight: setHeight,
      escapeScriptTags: escapeScriptTags
    };
  })();

}).call(this);
