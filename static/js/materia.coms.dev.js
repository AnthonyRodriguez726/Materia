// Generated by CoffeeScript 1.6.3
(function() {
  Namespace('Materia.Coms').Json = (function() {
    var isError, send, setGateway, showErorr, _gatewayURL;
    _gatewayURL = '';
    setGateway = function(newGateway) {
      return _gatewayURL = newGateway;
    };
    send = function(method, args, callback, ignoreError) {
      var callbackInterrupt, nameArr, widgetId;
      if (_gatewayURL == null) {
        _gatewayURL = API_LINK;
      }
      nameArr = window.location.pathname.replace("/widgets/", '').split("/");
      nameArr.pop().split('-').shift();
      widgetId = nameArr.join('-');
      if (callback == null) {
        callback = $.noop();
      }
      if (args == null) {
        args = [];
      }
      callbackInterrupt = function(data) {
        if ((ignoreError != null) && (data != null) && (data.msg != null) && (data.title != null) && (data.type != null)) {
          showErorr(data);
        }
        if (callback != null) {
          return callback(data);
        }
      };
      switch (method) {
        case "widgets_get":
          return callbackInterrupt(widget_info);
        case "session_valid":
          return true;
        case 'widget_instances_get':
          return callbackInterrupt([widget_inst]);
        case 'session_play_create':
          return callbackInterrupt('FFJFPPgWlWQVXxrfc1z5HNFWURZdXZVWHVodVg3S19nUUUwZjlOWElhQllubDQycTRLTGxlTTdIV2M');
        case 'question_set_get':
          return callbackInterrupt(demo_qset);
        case 'play_logs_save':
          return true;
        case 'play_storage_data_save':
          return true;
      }
    };
    showErorr = function(data) {
      if (data.title === 'Invalid Login') {
        return window.location = BASE_URL + "login";
      }
    };
    isError = function(jsonResult) {
      return (jsonResult != null) && typeof jsonResult.errorID !== 'undefined';
    };
    return {
      send: send,
      isError: isError,
      setGateway: setGateway
    };
  })();

}).call(this);
