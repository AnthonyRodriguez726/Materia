// Generated by CoffeeScript 1.6.3
(function() {
  var __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  Namespace('Materia').QuestionImporter = (function() {
    var $selectedAssets, $table, init, _getQuestions, _getType, _loadAllQuestions, _loadSelectedQuestions, _setupTable;
    $selectedAssets = [];
    $table = null;
    init = function(gateway) {
      return $(document).ready(function() {
        _setupTable();
        return _loadAllQuestions();
      });
    };
    _setupTable = function() {
      $(document).on('click', '#question-table tbody tr', function(e) {
        var $checkbox, $selected;
        $checkbox = $(this).find(':checkbox');
        $selected = $(this).toggleClass('row_selected').hasClass('row_selected');
        $checkbox.prop('checked', $selected);
        if (e.target.type === 'checkbox') {
          e.stopPropagation();
        }
        if ($selected) {
          return $selectedAssets.push($checkbox.prop('value'));
        } else {
          return $selectedAssets.splice($selectedAssets.indexOf($checkbox.prop('value')), 1);
        }
      });
      $('#submit-button').click(function(e) {
        e.stopPropagation();
        _loadSelectedQuestions($selectedAssets);
        return false;
      });
      $(window).bind('hashchange', _loadAllQuestions);
      $(window).resize(function() {
        $('div.dataTables_scrollBody').height($(window).height() - 150);
        return $table.fnAdjustColumnSizing();
      });
      $table = $('#question-table').dataTable({
        bPaginate: false,
        bLengthChange: true,
        bAutoWidth: true,
        bProcessing: true,
        sScrollY: '500px',
        oLanguage: {
          sSearch: '',
          sInfoFiltered: ' / _MAX_',
          sInfo: 'showing: _TOTAL_'
        },
        aoColumns: [
          {
            mDataProp: 'text'
          }, {
            mDataProp: 'type'
          }, {
            mDataProp: 'created_at'
          }, {
            mDataProp: 'uses'
          }
        ],
        aaSorting: [[2, 'desc']],
        aoColumnDefs: [
          {
            fnRender: function(oObj, sVal) {
              var d;
              d = new Date(sVal * 1000);
              return (d.getMonth() + 1) + '/' + d.getDate() + '/' + d.getFullYear();
            },
            aTargets: [2]
          }, {
            fnRender: function(oObj, sVal) {
              return '<input type="checkbox" name="id" value="' + oObj.aData['id'] + '" > <span class="q">' + sVal + '</span>';
            },
            aTargets: [0]
          }
        ]
      });
      return $('div.dataTables_scrollBody').height($(window).height() - 150);
    };
    _loadAllQuestions = function() {
      var questionTypes;
      $selectedAssets = [];
      $('#question-table').dataTable().fnClearTable();
      questionTypes = _getType();
      return _getQuestions(null, questionTypes, function(result) {
        if (result !== null && !(__indexOf.call(result, 'msg') >= 0) && result.length > 0) {
          $('#question-table').dataTable().fnClearTable();
          return $('#question-table').dataTable().fnAddData(result);
        }
      });
    };
    _getQuestions = function(questionIds, questionTypes, callback) {
      return Materia.Coms.Json.send('questions_get', [questionIds, questionTypes], callback);
    };
    _loadSelectedQuestions = function(questionIds) {
      return _getQuestions(questionIds, null, function(result) {
        if ((result != null) && !('msg' in result) && result.length > 0) {
          return window.opener.Materia.Creator.onQuestionImportComplete(JSON.stringify(result));
        }
      });
    };
    _getType = function() {
      var l, type;
      l = document.location.href;
      type = l.substring(l.lastIndexOf('=') + 1);
      return type;
    };
    return {
      init: init
    };
  })();

}).call(this);
