// Generated by CoffeeScript 1.6.3
(function() {
  Namespace('Materia.Widget').Catalog = (function() {
    var clean_name, prepare, removeInfocard, replaceDefault, showInfocard, tumbnail, widgets, _callback;
    clean_name = null;
    tumbnail = null;
    _callback = null;
    widgets = null;
    prepare = function(callback) {
      _callback = callback;
      return Materia.Coms.Json.send('widgets_get', null, function(data) {
        replaceDefault(data);
        return $('.widget').mouseenter(function() {
          var card, pos;
          pos = $(this).index('.widget');
          card = Materia.Widget.Catalog.showInfocard(pos);
          if (card != null) {
            return card.mouseleave(function() {
              return Materia.Widget.Catalog.removeInfocard();
            });
          }
        });
      });
    };
    replaceDefault = function(widgetInfo) {
      var $defaultContent, $defaultFeatures, $featuresClone, $featuresDt, $middleContent, $widgets, defaultSupported, feature, features, hideFeatures, middleHtml, project, supported, supportedClone, supportedDt, w, _i, _j, _k, _len, _len1, _len2, _ref, _ref1;
      $widgets = $([]);
      Materia.Set.Throbber.startSpin('.page');
      $defaultContent = $($('#t-widget-card').html());
      for (_i = 0, _len = widgetInfo.length; _i < _len; _i++) {
        w = widgetInfo[_i];
        $middleContent = $defaultContent.clone();
        hideFeatures = true;
        $middleContent.find('h1').children('a').attr('href', "/widgets/" + w.id + "-" + w.clean_name);
        $middleContent.addClass(w.clean_name);
        $middleContent.removeClass('hidden');
        $middleContent.attr('id', w.ID);
        if (w.meta_data['excerpt'] !== null) {
          $middleContent.find('dt[data-type=description]').next().html(w.meta_data['excerpt']);
        } else {
          $middleContent.find('dt[data-type=description]').next().html('No description available.');
        }
        if ((w.meta_data['features'] != null) && w.meta_data['features'].length > 0) {
          w.meta_data['features'].sort();
          $featuresDt = $middleContent.find('dt[data-type=features]');
          $defaultFeatures = $featuresDt.next();
          _ref = w.meta_data['features'];
          for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
            feature = _ref[_j];
            $featuresClone = $defaultFeatures.clone();
            $featuresClone.html(feature);
            $featuresDt.append($featuresClone);
          }
          $defaultFeatures.remove();
        } else {
          features = $middleContent.find('dt[data-type=features]');
          $(features).next().remove();
          $(features).remove();
        }
        if ((w.meta_data['supported_data'] != null) && w.meta_data['supported_data'].length > 0) {
          w.meta_data['supported_data'].sort();
          supportedDt = $middleContent.find('dt[data-type=supported]');
          defaultSupported = supportedDt.next();
          _ref1 = w.meta_data['supported_data'];
          for (_k = 0, _len2 = _ref1.length; _k < _len2; _k++) {
            supported = _ref1[_k];
            supportedClone = defaultSupported.clone();
            $(supportedClone).html(supported);
            $(supportedDt).append(supportedClone);
          }
          $(defaultSupported).remove();
        } else {
          supported = $middleContent.find('dt[data-type=supported]');
          $(supported).next().remove();
          $(supported).remove();
        }
        if (w.meta_data['project'] == null) {
          project = $middleContent.find('dt[data-type=project]');
          $(project).next().html('General');
        }
        $middleContent.children(':first-child').attr('href', "/widgets/" + w.id + "-" + w.clean_name);
        middleHtml = $middleContent.html();
        middleHtml = middleHtml.replace(/_template_name/g, w.name);
        $middleContent.html(middleHtml);
        $($middleContent).children(':first-child').children(':first-child').attr('src', Materia.Image.iconUrl(w.dir, 92));
        $middleContent.removeClass('template');
        $widgets = $widgets.add($middleContent);
      }
      Materia.Set.Throbber.stopSpin('.page');
      $(".template").remove();
      if (_callback != null) {
        return _callback($widgets);
      }
    };
    showInfocard = function(position) {
      var $widget, cardContent, cardWidth, infocard, left, top;
      if (isMobile.any()) {
        return null;
      }
      $('.infocard').remove();
      infocard = $('<div>').addClass('infocard');
      $widget = $('.widget').eq(position);
      cardContent = $('<a>').addClass('card-content').attr('href', $widget.find('a:first').attr('href'));
      cardContent.append($widget.html());
      cardContent.append($('<div>').addClass('clear'));
      infocard.append(cardContent);
      $('.catalog .widgets').append(infocard);
      cardWidth = $widget.width();
      left = $widget.position().left;
      top = $widget.position().top + 5;
      infocard.css({
        top: top,
        left: left,
        width: cardWidth
      });
      infocard.hide().fadeIn('fast');
      return $(infocard);
    };
    removeInfocard = function() {
      return $('.infocard').fadeOut('fast').remove();
    };
    return {
      prepare: prepare,
      replaceDefault: replaceDefault,
      showInfocard: showInfocard,
      removeInfocard: removeInfocard
    };
  })();

}).call(this);
